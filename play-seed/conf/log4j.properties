# Root logger option
#INFO Prints
log4j.rootLogger=INFO, stdout 
log4j.logger.uncaughtExceptions = ALL, stderr
log4j.additivity.uncaughtExceptions = false

#DEBUG Prints
#log4j.rootLogger=DEBUG, stdout
log4j.logger.uncaughtExceptions = ALL, stderr
log4j.additivity.uncaughtExceptions = false

log4j.logger.httpclient.wire = ERROR, stderr
log4j.additivity.org.apache.commons.httpclient = false
log4j.logger.org.apache.commons.httpclient = ERROR, stderr

#hibernate debug
#log4j.logger.org.hibernate.SQL=trace

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
 
# Direct log messages to stderr
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# log errors to rolling file, creating new log files when they become to large
#log4j.appender.rollFile=org.apache.log4j.RollingFileAppender
#log4j.appender.rollFile.File = logs/log.txt
#log4j.appender.rollFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.rollFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#log4j.appender.rollFile.MaxFileSize = 500KB

